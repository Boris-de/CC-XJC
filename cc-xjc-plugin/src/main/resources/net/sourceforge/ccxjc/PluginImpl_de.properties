#$Id$
couldNotAddStdCtor=Konnte keinen \u00F6ffentlichen Standard-Konstruktor zur Klasse ''{0}'' hinzuf\u00FCgen.
couldNotAddCopyCtor=Konnte keinen Kopier-Konstruktor zur Klasse ''{0}'' hinzuf\u00FCgen.
getterNotNound=Accessor-Methode f\u00FCr ''{0}'' Eigenschaft der Klasse ''{1}'' nicht gefunden. Bitte berichten Sie diesen Fehler unter https://apps.sourceforge.net/mantisbt/ccxjc/ inklusive des verursachenden Schemas und der verwendeten XJC-Kommandozeile.
standardCtorExists=Klasse ''{0}'' besitzt bereits einen \u00F6ffentlichen Standard-Konstruktor. Keinen Quelltext erzeugt.
copyCtorExists=Klasse ''{0}'' besitzt bereits einen Kopier-Konstruktor. Keinen Quelltext erzeugt.
usage=CC-XJC: aktiviert die Generierung von Kopier-Konstruktoren.
methodNotFound=Methode nicht gefunden: ''{0}''
cannotCopyProperty=''{0}'' Eigenschaft der Klasse ''{1}'' kann nicht kopiert werden. Bitte berichten Sie diesen Fehler an https://apps.sourceforge.net/mantisbt/ccxjc/ inklusive dem verursachenden Schema und der verwendeten XJC Kommandozeile.
methodExists=Klasse ''{1}'' besitzt bereits eine ''{0}'' Methode. Keinen Quelltext erzeugt.
couldNotAddMethod=Konnte ''{0}'' Methode nicht zur Klasse ''{1}'' hinzuf\u00FCgen.
title=CC-XJC Version ${pom.version} Build ${buildNumber}
bugtrackerUrl=https://apps.sourceforge.net/mantisbt/ccxjc/
report={0,number} Methoden - {1,number} Konstruktoren - {2,number} Ausdr\u00FCcke
visibilityReport=Erstellt Methoden mit ''{0}'' Sichtbarkeit.
visibilityUsage=CC-XJC: steuert die Sichtbarkeit von Kopier-Methoden ([private, package, protected, public]). Standard: private
targetUsage=CC-XJC: steuert das Ziel-JDK ([1.5, 1.6, 1.7]). Standard: 1.5
fieldWithoutProperties=Feld ''{0}'' der Klasse ''{1}'' hat keine Eigenschaften.
cannotCopyType=Typ ''{0}'' der ''{1}'' Eigenschaft der Klasse ''{2}'' kann nicht kopiert werden. Kopiert Referenz.
missingOptionArgument=Fehlendes Argument f\u00FCr ''{0}'' Option.
expectedOptionArgument=Erwartet {0}.
nonElementWarning=Eigenschaft ''{1}'' der Klasse ''{0}'' referenziert Typ ''{2}''. Die Definition dieses Typs liegt ausserhalb des Schema-Compilers. Dem Plugin standen bei der \u00DCbersetzung unter Umst\u00E4nden nicht ausreichend Informationen \u00FCber diesen Typ zur Verf\u00FCgung so da\u00DF der erstellte Code fehlerhaft sein k\u00F6nnte. Der Code sollte manuell gepr\u00FCft werden oder der referenzierte Typ zur \u00DCbersetzungseinheit hinzugef\u00FCgt werden. (Tip: suchen Sie nach ''{3}'' Java-Kommentaren). Die Unterst\u00FCtzung dieser Art referenzierter Typen ist experimentell.
referencedSupertypeWarning=Klasse ''{0}'' erbt von Typ ''{1}''. Die Definition dieses Typs liegt ausserhalb des Schema-Compilers. Dem Plugin standen bei der \u00DCbersetzung unter Umst\u00E4nden nicht ausreichend Informationen \u00FCber diesen Typ zur Verf\u00FCgung so da\u00DF der erstellte Code fehlerhaft sein k\u00F6nnte. Die erstellten Konstruktoren in der Hierarchie von ''{0}'' sollten manuell gepr\u00FCft werden oder der referenzierte Typ zur \u00DCbersetzungseinheit hinzugef\u00FCgt werden (Tip: suchen Sie nach ''{2}'' Java-Kommentaren). Die Unterst\u00FCtzung dieser Art referenzierter Typen ist experimentell.
nullableUsage=CC-XJC: erlaubt die \u00DCbergabe von ''null''-Referenzen an Kopier-Konstruktoren. Standard: nicht erlaubt
hierarchicalUsage=CC-XJC: aktiviert die Generierung von hierarchischen Kopier-Konstruktoren. Standard: deaktiviert
cloneableTypesUsage=CC-XJC: Liste von Namen klonbarer Klassen getrennt mit ''{0}''.
immutableTypesUsage=CC-XJC: Liste von Namen unver\u00E4nderbarer Klassen getrennt mit ''{0}''.
cloneableTypesInfo=Klonbare Typen:  {0}
immutableTypesInfo=Unver\u00E4nderbare Typen: {0}
