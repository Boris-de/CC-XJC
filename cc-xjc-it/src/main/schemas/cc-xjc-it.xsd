<?xml version="1.0" encoding="UTF-8"?>
<!--

  Copyright (c) 2009 The CC-XJC Project. All rights reserved.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions
  are met:

    * Redistributions of source code must retain the above copyright
      notice, this  list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the
      distribution.

  THIS SOFTWARE IS PROVIDED BY THE CC-XJC PROJECT AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE CC-XJC PROJECT OR
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

  $Id: pom.xml 51 2009-07-26 05:33:33Z schulte2005 $

-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            targetNamespace="http://sourceforge.net/ccxjc/it"
            xmlns:ccxjcit="http://sourceforge.net/ccxjc/it"
            xmlns:xmime="http://www.w3.org/2005/05/xmlmime"
            xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified"
            jaxb:version="2.0">
  <xsd:annotation>
    <xsd:documentation xml:lang="en"><![CDATA[

  Copyright (c) 2009 The CC-XJC Project. All rights reserved.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions
  are met:

    * Redistributions of source code must retain the above copyright
      notice, this  list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the
      distribution.

  THIS SOFTWARE IS PROVIDED BY THE CC-XJC PROJECT AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE CC-XJC PROJECT OR
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

  $Id: pom.xml 51 2009-07-26 05:33:33Z schulte2005 $

]]>
    </xsd:documentation>
  </xsd:annotation>
  <!--                                                                       -->
  <!-- SimpleTypeAttributes                                                  -->
  <!--                                                                       -->
  <xsd:element name="simple-type-attibutes-test"
               type="ccxjcit:SimpleTypeAttributes"/>
  <xsd:complexType name="SimpleTypeAttributes">
    <xsd:annotation>
      <xsd:documentation><![CDATA[
        XML Schema Part 2: Datatypes Second Edition
        3 Built-in datatypes]]>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="anySimpleType" type="xsd:anySimpleType" use="required"/>
    <xsd:attribute name="duration" type="xsd:duration" use="required"/>
    <xsd:attribute name="dateTime" type="xsd:dateTime" use="required"/>
    <xsd:attribute name="time" type="xsd:dateTime" use="required"/>
    <xsd:attribute name="date" type="xsd:dateTime" use="required"/>
    <xsd:attribute name="gYearMonth" type="xsd:gYearMonth" use="required"/>
    <xsd:attribute name="gYear" type="xsd:gYear" use="required"/>
    <xsd:attribute name="gMonthDay" type="xsd:gMonthDay" use="required"/>
    <xsd:attribute name="gDay" type="xsd:gDay" use="required"/>
    <xsd:attribute name="gMonth" type="xsd:gMonth" use="required"/>
    <xsd:attribute name="boolean" type="xsd:boolean" use="required"/>
    <xsd:attribute name="base64Binary" type="xsd:base64Binary" use="required"/>
    <xsd:attribute name="hexBinary" type="xsd:hexBinary" use="required"/>
    <xsd:attribute name="float" type="xsd:float" use="required"/>
    <xsd:attribute name="decimal" type="xsd:decimal" use="required"/>
    <xsd:attribute name="integer" type="xsd:integer" use="required"/>
    <xsd:attribute name="nonPositiveInteger" type="xsd:nonPositiveInteger" use="required"/>
    <xsd:attribute name="negativeInteger" type="xsd:negativeInteger" use="required"/>
    <xsd:attribute name="nonNegativeInteger" type="xsd:nonNegativeInteger" use="required"/>
    <xsd:attribute name="positiveInteger" type="xsd:positiveInteger" use="required"/>
    <xsd:attribute name="unsignedLong" type="xsd:unsignedLong" use="required"/>
    <xsd:attribute name="unsignedInt" type="xsd:unsignedInt" use="required"/>
    <xsd:attribute name="unsignedShort" type="xsd:unsignedShort" use="required"/>
    <xsd:attribute name="unsignedByte" type="xsd:unsignedByte" use="required"/>
    <xsd:attribute name="long" type="xsd:long" use="required"/>
    <xsd:attribute name="int" type="xsd:int" use="required"/>
    <xsd:attribute name="short" type="xsd:short" use="required"/>
    <xsd:attribute name="byte" type="xsd:byte" use="required"/>
    <xsd:attribute name="double" type="xsd:double" use="required"/>
    <xsd:attribute name="anyURI" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="QName" type="xsd:QName" use="required"/>
    <xsd:attribute name="NOTATION" type="ccxjcit:testNotation" use="required"/>
    <xsd:attribute name="string" type="xsd:string" use="required"/>
    <xsd:attribute name="normalizedString" type="xsd:normalizedString" use="required"/>
    <xsd:attribute name="token" type="xsd:token" use="required"/>
    <xsd:attribute name="language" type="xsd:language" use="required"/>
    <xsd:attribute name="Name" type="xsd:Name" use="required"/>
    <xsd:attribute name="NCName" type="xsd:NCName" use="required"/>
    <xsd:attribute name="ID" type="xsd:ID" use="required"/>
    <xsd:attribute name="IDREF" type="xsd:IDREF" use="required"/>
    <xsd:attribute name="IDREFS" type="xsd:IDREFS" use="required"/>
    <xsd:attribute name="ENTITY" type="xsd:ENTITY" use="required"/>
    <xsd:attribute name="ENTITIES" type="xsd:ENTITIES" use="required"/>
    <xsd:attribute name="NMTOKEN" type="xsd:NMTOKEN" use="required"/>
    <xsd:attribute name="NMTOKENS" type="xsd:NMTOKENS" use="required"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- ChoiceComplexType                                                     -->
  <!--                                                                       -->
  <xsd:element name="choice-complex-type-test"
               type="ccxjcit:ChoiceComplexType"/>
  <xsd:complexType name="ChoiceComplexType">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="stringItem" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="intItem" type="xsd:int" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="base64BinaryItem" type="xsd:base64Binary" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="choiceItem" type="ccxjcit:ChoiceComplexType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:choice>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- SkipBoundedAnyComplexType                                             -->
  <!--                                                                       -->
  <xsd:element name="skip-bounded-any-complex-type-test"
               type="ccxjcit:SkipBoundedAnyComplexType"/>
  <xsd:complexType name="SkipBoundedAnyComplexType">
    <xsd:sequence>
      <xsd:any minOccurs="0" maxOccurs="1" processContents="skip"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- SkipUnboundedAnyComplexType                                           -->
  <!--                                                                       -->
  <xsd:element name="skip-unbounded-any-complex-type-test"
               type="ccxjcit:SkipUnboundedAnyComplexType"/>
  <xsd:complexType name="SkipUnboundedAnyComplexType">
    <xsd:sequence>
      <xsd:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- StrictBoundedAnyComplexType                                           -->
  <!--                                                                       -->
  <xsd:element name="strict-bounded-any-complex-type-test"
               type="ccxjcit:StrictBoundedAnyComplexType"/>
  <xsd:complexType name="StrictBoundedAnyComplexType">
    <xsd:sequence>
      <xsd:any minOccurs="0" maxOccurs="1" processContents="strict"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- StrictUnboundedAnyComplexType                                         -->
  <!--                                                                       -->
  <xsd:element name="strict-unbounded-any-complex-type-test"
               type="ccxjcit:StrictUnboundedAnyComplexType"/>
  <xsd:complexType name="StrictUnboundedAnyComplexType">
    <xsd:sequence>
      <xsd:any minOccurs="0" maxOccurs="unbounded" processContents="strict"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- LaxBoundedAnyComplexType                                              -->
  <!--                                                                       -->
  <xsd:element name="lax-bounded-any-complex-type-test"
               type="ccxjcit:LaxBoundedAnyComplexType"/>
  <xsd:complexType name="LaxBoundedAnyComplexType">
    <xsd:sequence>
      <xsd:any minOccurs="0" maxOccurs="1" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- LaxUnboundedAnyComplexType                                            -->
  <!--                                                                       -->
  <xsd:element name="lax-unbounded-any-complex-type-test"
               type="ccxjcit:LaxUnboundedAnyComplexType"/>
  <xsd:complexType name="LaxUnboundedAnyComplexType">
    <xsd:sequence>
      <xsd:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- ParentComplexType                                                     -->
  <!--                                                                       -->
  <xsd:complexType name="ParentComplexType"/>
  <!--                                                                       -->
  <!-- ChildOfParentComplexType                                              -->
  <!--                                                                       -->
  <xsd:complexType name="ChildOfParentComplexType">
    <xsd:complexContent>
      <xsd:extension base="ccxjcit:ParentComplexType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- ChildOfChildOfParentComplexType                                       -->
  <!--                                                                       -->
  <xsd:complexType name="ChildOfChildOfParentComplexType">
    <xsd:complexContent>
      <xsd:extension base="ccxjcit:ChildOfParentComplexType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- ChildOfChildOfChildOfParentComplexType                                -->
  <!--                                                                       -->
  <xsd:complexType name="ChildOfChildOfChildOfParentComplexType">
    <xsd:complexContent>
      <xsd:extension base="ccxjcit:ChildOfChildOfParentComplexType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- ChildOfChildOfChildOfChildOfParentComplexType                         -->
  <!--                                                                       -->
  <xsd:complexType name="ChildOfChildOfChildOfChildOfParentComplexType">
    <xsd:complexContent>
      <xsd:extension base="ccxjcit:ChildOfChildOfChildOfParentComplexType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- HierarchicalChoiceComplexType                                         -->
  <!--                                                                       -->
  <xsd:element name="hierarchical-choice-complex-type-test"
               type="ccxjcit:HierarchicalChoiceComplexType"/>
  <xsd:complexType name="HierarchicalChoiceComplexType">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="childOfChildOfChildOfChildOfParent" type="ccxjcit:ChildOfChildOfChildOfChildOfParentComplexType"/>
      <xsd:element name="childOfChildOfChildOfParent" type="ccxjcit:ChildOfChildOfChildOfParentComplexType"/>
      <xsd:element name="parent" type="ccxjcit:ParentComplexType"/>
      <xsd:element name="childOfChildOfParent" type="ccxjcit:ChildOfChildOfParentComplexType"/>
      <xsd:element name="childOfParent" type="ccxjcit:ChildOfParentComplexType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- MixedComplexType                                                      -->
  <!--                                                                       -->
  <xsd:element name="mixed-complex-type-test"
               type="ccxjcit:MixedComplexType"/>
  <xsd:complexType name="MixedComplexType" mixed="true">
    <xsd:sequence>
      <xsd:element name="string" type="xsd:string"/>
      <xsd:element name="positiveInteger" type="xsd:positiveInteger"/>
      <xsd:element name="anyURI" type="xsd:anyURI"/>
      <xsd:any processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- XMimeComplexType                                                      -->
  <!--                                                                       -->
  <xsd:element name="xmime-complex-type-test"
               type="ccxjcit:XMimeComplexType"/>
  <xsd:complexType name="XMimeComplexType" mixed="true">
    <xsd:sequence>
      <xsd:element name="jpegImage" type="xsd:base64Binary"
                   xmime:expectedContentTypes="image/jpeg"/>
      <xsd:element name="gifImage" type="xsd:base64Binary"
                   xmime:expectedContentTypes="image/gif"/>
      <xsd:element name="textXml" type="xsd:base64Binary"
                   xmime:expectedContentTypes="text/xml"/>
      <xsd:element name="applicationXml" type="xsd:base64Binary"
                   xmime:expectedContentTypes="application/xml"/>
      <xsd:element name="applicationOctetStream" type="xsd:base64Binary"
                   xmime:expectedContentTypes="application/octet-stream"/>
      <xsd:element name="applicationPdf" type="xsd:base64Binary"
                   xmime:expectedContentTypes="application/pdf"/>
      <xsd:any processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- ElementClasses                                                        -->
  <!--                                                                       -->
  <xsd:element name="element-class-test"
               type="ccxjcit:ElementClassComplexType"/>
  <xsd:complexType name="ElementClassComplexType">
    <xsd:sequence>
      <xsd:element name="string" type="xsd:string" minOccurs="0"
                   maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:appinfo>
            <jaxb:class>
              <jaxb:javadoc>Test class customization.</jaxb:javadoc>
            </jaxb:class>
          </xsd:appinfo>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--                                                                       -->
  <!-- Test simple types.                                                    -->
  <!--                                                                       -->
  <xsd:notation name="gif" public="image/gif" system="test"/>
  <xsd:notation name="jpeg" public="image/jpeg" system="test"/>
  <xsd:simpleType name="testNotation">
    <xsd:restriction base="xsd:NOTATION">
      <xsd:enumeration value="ccxjcit:gif"/>
      <xsd:enumeration value="ccxjcit:jpeg"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>
